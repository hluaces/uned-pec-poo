package iu.swing;

import aplicacion.Aplicacion;
import biblioteca.Biblioteca;
import java.awt.event.KeyEvent;

/**
 * {@link ModuloIUSwingIF} que mostrará un selector para el 
 * {@link Aplicacion#bibliotecas pool de bibliotecas} de una {@link Aplicacion}.
 * 
 * El usuario seleccionará con qué biblioteca quiere interactuar.
 * 
 * @author Héctor Luaces Novo
 */
class ModuloSelectorBiblioteca extends javax.swing.JFrame implements ModuloIUSwingIF {
    /**
     * El {@link ControladorSwing} asociado a éste módulo
     */
    private ControladorSwing controlador;

    /**
     * Limpiael combo de bibliotecas del módulo y lo rellena con las bibliotecas
     * disponibles en la aplicación.
     */
    private void importarBibliotecas() {
        comboBiblioteca.removeAllItems();
        
        for(Biblioteca b: controlador.getAplicacion().getBibliotecas()) 
            comboBiblioteca.addItem(b.getNombre());
    }
    
    /**
     * Constructor privado.
     * 
     * @see ModuloSelectorBiblioteca#ModuloSelectorBiblioteca(iu.swing.ControladorSwing) 
     */
    private ModuloSelectorBiblioteca() {
        super();
        initComponents();
    }
    
    /**
     * Crea un nuevo Módulo selector de biblioteca con el {@link ControladorSwing}
     * especificado.
     */
    public ModuloSelectorBiblioteca(ControladorSwing c) {
        this();
        
        this.setControlador(c);
    }

    @Override
    public final void setControlador(ControladorSwing c) {
        this.controlador = c;
        this.actualizar();
    }

    @Override
    public void actualizar() {
        this.importarBibliotecas();
    }
    
    
            
    /**
     * Ejecutado cuando se pulsa el botón 'ok'.
     * 
     * Establece la {@link Aplicacion#bibliotecaActiva biblioteca activa} de
     * la aplicación a la que elige el usuario y cierra la ventana.
     */
    private void seleccionarBiblioteca()
    {
        this.controlador.getAplicacion().setBibliotecaActiva(
            comboBiblioteca.getSelectedItem().toString()
        );
        this.controlador.mostrarLogin();
        this.controlador.cerrarFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        panelBotones = new javax.swing.JPanel();
        botonCancelar = new javax.swing.JButton();
        buttonOk = new javax.swing.JButton();
        panelCombo = new javax.swing.JPanel();
        comboBiblioteca = new javax.swing.JComboBox<>();
        labelBiblioteca = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Selector biblioteca");
        setResizable(false);

        botonCancelar.setText("Cancelar");
        botonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonCancelarMouseClicked(evt);
            }
        });

        buttonOk.setText("Aceptar");
        buttonOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonOkMouseClicked(evt);
            }
        });
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBotonesLayout = new javax.swing.GroupLayout(panelBotones);
        panelBotones.setLayout(panelBotonesLayout);
        panelBotonesLayout.setHorizontalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonOk, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBotonesLayout.setVerticalGroup(
            panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonCancelar)
                    .addComponent(buttonOk))
                .addContainerGap())
        );

        comboBiblioteca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBiblioteca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboBibliotecaKeyPressed(evt);
            }
        });

        labelBiblioteca.setText("Seleccione biblioteca:");
        labelBiblioteca.setToolTipText("");

        javax.swing.GroupLayout panelComboLayout = new javax.swing.GroupLayout(panelCombo);
        panelCombo.setLayout(panelComboLayout);
        panelComboLayout.setHorizontalGroup(
            panelComboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComboLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelComboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelBiblioteca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(comboBiblioteca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelComboLayout.setVerticalGroup(
            panelComboLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelComboLayout.createSequentialGroup()
                .addComponent(labelBiblioteca, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboBiblioteca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCombo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }

    private void botonCancelarMouseClicked(java.awt.event.MouseEvent evt) {
        System.exit(0);
    }

    private void buttonOkMouseClicked(java.awt.event.MouseEvent evt) {
        seleccionarBiblioteca();
    }

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {
        seleccionarBiblioteca();
    }

    private void comboBibliotecaKeyPressed(java.awt.event.KeyEvent evt) {
        if ( evt.getKeyCode() == KeyEvent.VK_ENTER )
            seleccionarBiblioteca();
        else if ( evt.getKeyCode() == KeyEvent.VK_ESCAPE )
            System.exit(0);
    }

    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox<String> comboBiblioteca;
    private javax.swing.JLabel labelBiblioteca;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelCombo;
}
